{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";wYACA,ovNAIA,IAAQA,EAAyDC,EAAAA,EAAAA,eAAzCC,EAAyCD,EAAAA,EAAAA,kBAAtBE,EAAsBF,EAAAA,EAAAA,kBAE3DG,GAAYC,EAAAA,EAAAA,IAAOL,EAAgBE,EAAmB,CAC1DI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAwCF,QArC8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAGOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAJ5B,EAKxB,EAEME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EAEMY,cAAa,SAACC,GAAY,oGACzBA,EAAWC,eAAe,MAAO,CAAF,gEAItBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAL5B,EAMhC,EAEMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,EAEMS,kBAAiB,SAACC,GAAO,4HACf,EAAKR,oBAAmB,uCAAES,QAAO,SAACN,GAC9C,IACMO,GAD4BP,EAAWQ,OAAS,KAAKC,cACJC,QAAQ,MAAO,IAGhEC,EADiBN,EAAMI,cACMC,QAAQ,MAAO,IAElD,OAAuD,IAAhDH,EAAsBK,QAAQD,EACvC,KAAC,0CAT4B,EAU/B,mSC9CF,irOAcA,QAboB,yBADpB,4FACoB,SADpB,QAMG,EALiB,EAUjB,OAXH,EACoB,OADpB,EACoB,8CAClB,sGACyBE,MAAMC,EAAAA,EAAAA,mBAAgC,OAA/C,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,0FAED,WAA8BvB,GAAE,uFACPkB,MAAMC,EAAAA,EAAAA,OAAqBnB,IAAI,OAAxC,OAARoB,EAAW,EAAH,uBACPA,EAASC,QAAM,2CACvB,+CAXH,6DAWG,EAViB,gDCMpB,QANsB,CACpBG,kBAAmB,GAAF,OAAKlC,EAAAA,EAAAA,SAAe,QACrCmC,WAAY,GAAF,OAAKnC,EAAAA,EAAAA,gBACfoC,OAAQ,SAAC1B,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,mCCMhD,QAXe,CACb2B,SAAU,uCACVC,eAAgB,oDAChBC,iBAAkB,QAClBC,WAAY,oBAEZzC,eAAgB,2BAChBE,kBAAmB,EACnBC,kBAAmB,wECFfuC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,cAC/BC,OAAQF,SAASC,cAAc,WAC/BE,QAASH,SAASC,cAAc,gBAChCG,UAAWJ,SAASC,cAAc,gBAGpCI,OAAOC,iBAAiB,cAAc,WACpCT,EAAIU,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BT,EAAIU,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://submis-katalog/./src/scripts/data/favorite-restaurants-idb.js","webpack://submis-katalog/./src/scripts/data/restaurantApps-source.js","webpack://submis-katalog/./src/scripts/globals/api-endpoints.js","webpack://submis-katalog/./src/scripts/globals/config.js","webpack://submis-katalog/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable no-prototype-builtins */\r\n/* eslint-disable consistent-return */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATA_BASE_NAME, DATA_BASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATA_BASE_NAME, DATA_BASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putRestaurant(restaurant) {\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async searchRestaurants(query) {\r\n    return (await this.getAllRestaurants()).filter((restaurant) => {\r\n      const lowerCaseRestaurantTitle = (restaurant.title || '-').toLowerCase();\r\n      const jammedRestaurantTitle = lowerCaseRestaurantTitle.replace(/\\s/g, '');\r\n\r\n      const lowerCaseQuery = query.toLowerCase();\r\n      const jammedQuery = lowerCaseQuery.replace(/\\s/g, '');\r\n\r\n      return jammedRestaurantTitle.indexOf(jammedQuery) !== -1;\r\n    });\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import API_ENDPOINTS from '../globals/api-endpoints';\r\n\r\nclass RestaurantApps {\r\n  static async daftarRestaurant() {\r\n    const response = await fetch(API_ENDPOINTS.DAFTAR_RESTAURANT);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailRestaurant(id) {\r\n    const response = await fetch(API_ENDPOINTS.DETAIL(id));\r\n    return response.json();\r\n  }\r\n}\r\n\r\nexport default RestaurantApps;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINTS = {\r\n  DAFTAR_RESTAURANT: `${CONFIG.BASE_URL}list`,\r\n  BASE_IMAGE: `${CONFIG.BASE_IMAGE_URL}`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINTS;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/large/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: 'RestaurantApps-V1',\r\n\r\n  DATA_BASE_NAME: 'restaurant-apps-database',\r\n  DATA_BASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime';\r\nimport '../styles/main.css';\r\nimport '../styles/responsive.css';\r\nimport App from './views/app';\r\nimport swRegister from './utils/sw-register';\r\n\r\nconst app = new App({\r\n  button: document.querySelector('.hamburger'),\r\n  drawer: document.querySelector('.drawer'),\r\n  content: document.querySelector('#maincontent'),\r\n  heroImage: document.querySelector('#heroImage'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["DATA_BASE_NAME","CONFIG","DATA_BASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantTitle","title","toLowerCase","replace","jammedQuery","indexOf","fetch","API_ENDPOINTS","response","json","responseJson","restaurants","DAFTAR_RESTAURANT","BASE_IMAGE","DETAIL","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","app","App","button","document","querySelector","drawer","content","heroImage","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}